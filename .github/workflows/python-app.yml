name: Flask application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python 3.13.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        export SECRET_KEY=${{ secrets.SECRET_KEY }}
        pytest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Update repository on PythonAnywhere
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
      run: |
        # Используем API для запуска команды через task API
        echo "Starting repository update..."
        
        curl -X POST \
          -H "Authorization: Token $PA_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "command": "cd ~/flask_blog && git fetch origin && git reset --hard origin/main",
            "enabled": true,
            "interval": "daily"
          }' \
          "https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/tasks/"
        
        echo "Waiting for task to complete..."
        sleep 10
        
        echo "Repository update completed"

    - name: Reload webapp
      uses: jensvog/pythonanywhere-webapp-reload-action@v1
      with:
        host: 'www.pythonanywhere.com'
        username: ${{ secrets.PA_USERNAME }}
        api-token: ${{ secrets.PA_API_TOKEN }}
        domain-name: ${{ secrets.PA_DOMAIN_NAME }}