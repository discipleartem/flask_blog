name: Flask application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python 3.13.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        export SECRET_KEY=${{ secrets.SECRET_KEY }}
        pytest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
    - name: Update repository via PythonAnywhere Console API
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
      run: |
        echo "Creating new console..."
        # Создаем новую консоль
        RESPONSE=$(curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -H "Content-Type: application/json" \
          -d '{"executable": "bash"}' \
          "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/")
        
        # Извлекаем ID консоли из ответа
        CONSOLE_ID=$(echo $RESPONSE | grep -o '"id":[^,}]*' | cut -d':' -f2)
        echo "Console ID: $CONSOLE_ID"
        
        echo "Updating repository..."
        # Отправляем команды в консоль
        # Переходим в директорию проекта
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -H "Content-Type: application/json" \
          -d '{"input": "cd ~/flask_blog\n"}' \
          "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/send_input/"
        
        # Выполняем git fetch
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -H "Content-Type: application/json" \
          -d '{"input": "git fetch origin\n"}' \
          "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/send_input/"
        
        # Выполняем git reset
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -H "Content-Type: application/json" \
          -d '{"input": "git reset --hard origin/main\n"}' \
          "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/send_input/"
        
        # Даем время на выполнение команд
        sleep 5
        
        echo "Cleaning up..."
        # Закрываем консоль
        curl -X DELETE \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/"
        
        echo "Repository update completed"

    - name: Reload webapp
      uses: jensvog/pythonanywhere-webapp-reload-action@v1
      with:
        host: 'www.pythonanywhere.com'
        username: ${{ secrets.PA_USERNAME }}
        api-token: ${{ secrets.PA_API_TOKEN }}
        domain-name: ${{ secrets.PA_DOMAIN_NAME }}