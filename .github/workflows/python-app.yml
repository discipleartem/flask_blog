name: Flask application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python 3.13.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        export SECRET_KEY=${{ secrets.SECRET_KEY }}
        pytest

# автоматизация deploy на PythonAnywhere
  deploy:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history and branches

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pythonanywhere --upgrade

    - name: Create console on PythonAnywhere
      id: create_console
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
      run: |
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/" \
        -H "Authorization: Token ${PA_API_TOKEN}" \
        -d "executable=/bin/bash" > response.json
        cat response.json
        echo "::set-output name=console_id::$(jq -r .id response.json)"

    - name: Update repository on PythonAnywhere
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
        CONSOLE_ID: ${{ steps.create_console.outputs.console_id }}
      run: |
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/send_input/" \
        -H "Authorization: Token ${PA_API_TOKEN}" \
        -d "input=cd ~/home/${PA_USERNAME}/flask_blog && git pull origin main && exit"
        

    - name: Reload webapp
      uses: jensvog/pythonanywhere-webapp-reload-action@v1
      with:
        host: 'www.pythonanywhere.com'
        username: ${{ secrets.PA_USERNAME }}
        api-token: ${{ secrets.PA_API_TOKEN }}
        domain-name: ${{ secrets.PA_DOMAIN_NAME }}
