name: Flask application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python 3.13.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        export SECRET_KEY=${{ secrets.SECRET_KEY }}
        pytest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Update repository on PythonAnywhere
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
      run: |
        # Создаем новую консоль и сохраняем ответ во временный файл
        curl -s -X POST \
          -H "Authorization: Token $PA_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"executable":"bash", "working_directory":"/home/'$PA_USERNAME'"}' \
          "https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/" > response.json
        
        # Извлекаем ID консоли с помощью grep и sed
        CONSOLE_ID=$(grep -o '"id":[^,}]*' response.json | sed 's/"id"://')
        rm response.json
        
        echo "Created console with ID: $CONSOLE_ID"
        
        # Функция для отправки команды в консоль
        send_command() {
          echo "Executing command: $1"
          curl -s -X POST \
            -H "Authorization: Token $PA_API_TOKEN" \
            --data-urlencode "input=$1"$'\n' \
            "https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/$CONSOLE_ID/send_input/"
          # Добавляем небольшую задержку между командами
          sleep 2
        }
        
        # Выполняем команды обновления репозитория
        send_command "cd ~/flask_blog"
        send_command "git fetch origin"
        send_command "git reset --hard origin/main"
        
        # Даем время на завершение выполнения команд
        sleep 5
        
        # Закрываем консоль
        curl -s -X DELETE \
          -H "Authorization: Token $PA_API_TOKEN" \
          "https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/$CONSOLE_ID/"
        
        echo "Repository update completed"

    - name: Reload webapp
      uses: jensvog/pythonanywhere-webapp-reload-action@v1
      with:
        host: 'www.pythonanywhere.com'
        username: ${{ secrets.PA_USERNAME }}
        api-token: ${{ secrets.PA_API_TOKEN }}
        domain-name: ${{ secrets.PA_DOMAIN_NAME }}